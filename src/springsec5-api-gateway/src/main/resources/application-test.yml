server:
  port: 8081

basket:
  host: basket-amazin-dev.apps.ocp.datr.eu

inventory:
  host: inventory-amazin-dev.apps.ocp.datr.eu

user:
  host: user-amazin-dev.apps.ocp.datr.eu

#keycloak:
#  enabled: true
#  auth-server-url: http://127.0.0.1:8080/auth
#  resource: webapp
#  realm: amazin
#  credentials.secret: cc48f8ad-80d3-4019-8d36-7dfb6f5c86e7
#  use-resource-role-mappings: true
#  principal-attribute: preferred_username

kc:
  base-url: http://127.0.0.1:8080/auth
  realm: amazin
  realm-url: ${kc.base-url}/realms/${kc.realm}

spring:
  application:
    name: api-gateway.build.test
  main:
    allow-bean-definition-overriding: true
  security:
    oauth2:
      client:
        provider:
          keycloak:
            authorization-uri: ${kc.realm-url}/protocol/openid-connect/auth
            jwk-set-uri: ${kc.realm-url}/protocol/openid-connect/certs
            token-uri: ${kc.realm-url}/protocol/openid-connect/token
            # would be cool if there was a end-session-uri to propagate logouts

            #  User info endpoint not needed since Keycloak uses self-contained value tokens
            #            user-info-uri: ${kc.realm-url}/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username