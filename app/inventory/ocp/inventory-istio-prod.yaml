---
apiVersion: v1
kind: BuildConfig
metadata:
  annotations:
  labels:
    app: inventory
  name: inventory
spec:
  output:
    to:
      kind: ImageStreamTag
      name: 'inventory:latest'
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    binary: {}
    type: Binary
  strategy:
    sourceStrategy:
      from:
        kind: ImageStreamTag
        name: 'redhat-openjdk18-openshift:1.2'
        namespace: openshift
    type: Source

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: inventory
  name: inventory
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: inventory
        deploymentconfig: inventory
        version: v1
    spec:
      containers:
      - name: inventory
        image: docker-registry.default.svc:5000/amazin-dev/inventory:0.0.1-SNAPSHOT
        imagePullPolicy: Always
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: dev
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false

---
kind: Service
apiVersion: v1
metadata:
  name: inventory
  labels:
    app: inventory
spec:
  ports:
  - name: 8080-http
    protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: inventory
    deploymentconfig: inventory
  type: ClusterIP
  sessionAffinity: None
status:
  loadBalancer: {}

---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: gateway
  labels:
    app: inventory
  annotations:
    kubernetes.io/ingress.class: "istio"
spec:
  rules:
  - http:
      paths:
      - path: /.*
        backend:
          serviceName: inventory
          servicePort: 8080-http

kind: Route
apiVersion: v1
metadata:
  annotations:
  labels:
    app: inventory
  name: inventory
spec:
  host: inventory.apps.ocp.datr.eu
  port:
    targetPort: 8080-http
  to:
    kind: Service
    name: inventory
    weight: 100
  wildcardPolicy: None