apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: frontend-prod-dc
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: frontend
    name: frontend
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: frontend
      deploymentconfig: frontend
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: frontend
          deploymentconfig: frontend
      spec:
        containers:
        - name: frontend
          image: " "
          imagePullPolicy: Always
          env:
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false

- kind: Route
  apiVersion: v1
  metadata:
    annotations:
    labels:
      app: frontend
    name: frontend
  spec:
    host: amazin.apps.ocp.datr.eu
    port:
      targetPort: 8080
    to:
      kind: Service
      name: frontend
      weight: 100
    wildcardPolicy: None
