---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: user
  name: user
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: user
        deploymentconfig: user
        version: v1
    spec:
      containers:
      - name: user
        image: docker-registry.default.svc:5000/amazin-dev/user:0.0.1-SNAPSHOT
        imagePullPolicy: Always
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: prd
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false

---
kind: Service
apiVersion: v1
metadata:
  name: user
  labels:
    app: user
spec:
  ports:
  - name: http
    protocol: TCP
    port: 8080
  selector:
    app: user
    deploymentconfig: user
  type: ClusterIP
  sessionAffinity: None
