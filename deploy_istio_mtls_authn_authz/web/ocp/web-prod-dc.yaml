apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: web-prod-dc
objects:

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: web
    name: web
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: web
        version: v1
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: RollingUpdate
    template:
      annotations:
        sidecar.istio.io/inject: "false"
      metadata:
        labels:
          app: web
          version: v1
      spec:
        containers:
        - name: web
          image: " "
          ports:
          - containerPort: 8080
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            exec:
              command:
              - curl
              - -f
              - http://localhost:8080/
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            exec:
              command:
              - curl
              - -f
              - http://localhost:8080/
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: web
    name: web
  spec:
    ports:
    - port: 8080
      name: http
      protocol: TCP
      targetPort: 8080
    selector:
      app: web
    sessionAffinity: None
    type: ClusterIP